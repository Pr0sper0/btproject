{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateQuizButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddQuiz.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/boardAlgorithm.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","console","log","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","data-toggle","href","projectName","description","projectIdentifier","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateQuizButton","Fragment","Dashboard","getProjects","projects","Project_CreateQuizButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","localStorage","getItem","sent","_x2","setJWTToken","token","defaults","headers","common","logout","removeItem","Header","location","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-target","AddQuiz","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","inherits","createClass","value","nextProps","setState","e","_e$target","target","name","defineProperty","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","get","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","created_At","_nextProps$project_ta","_this$props$match$par","getProjectTask","UpdateProjetTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decoded","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","decoded_jwtToken","jwt_decode","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","securityUtils_SecuredRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.edb466e9.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    //const res =\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    console.log(\"Try to create project\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  console.log(\"Try to get projects\");\r\n  console.log(localStorage.getItem(\"jwtToken\"))\r\n  const res = await axios(\"/api/project/all\");\r\n  //history.push(\"/dashboard\");\r\n\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure want to delete project? This will delete all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"panel-group\">\r\n          <div className=\"panel panel-default\">\r\n            <div className=\"panel-heading\">\r\n              <h4 className=\"panel-title\">\r\n                <a data-toggle=\"collapse\" href=\"#collapse1\">\r\n                  {project.projectName}\r\n                </a>\r\n              </h4>\r\n            </div>\r\n            <div id=\"collapse1\" className=\"panel-collapse collapse\">\r\n              <div className=\"panel-body\">{project.description}</div>\r\n              <div className=\"panel-footer\">Panel Footer</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-md-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Quiz Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Quiz Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Quiz</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateQuizButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addQuiz\" className=\"btn btn-lg btn-info\">\r\n        Create a Quiz\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateQuizButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateQuizButton from \"./Project/CreateQuizButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Quiz list</h1>\r\n              <br />\r\n              <CreateQuizButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n              {/*\r\n                  <!-- Comments -->\r\n              */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n        console.log(axios.defaults.headers);\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n}\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decoded from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n        // post => Login Request\r\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n        // extract token from res.data\r\n        const { token } = res.data;\r\n        // store the token in the localStorage\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        // set our token in header ***\r\n        setJWTToken(token);\r\n        // decoded token on React\r\n        const decoded = jwt_decoded(token);\r\n        // dispatch to our securityReducer\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n\r\n  logout() {\r\n    this.props.logout();\r\n\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\"\r\n              onClick={this.logout.bind(this)}>\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Quiz Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nexport class AddQuiz extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    let { name, value } = e.target;\r\n    this.setState(() => ({ [name]: value }));\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        {\r\n          //check name attribute input fields\r\n          //create constructor\r\n          //set state\r\n          //set value on input fields\r\n          //create onChange function\r\n          //set onChange on each input field\r\n          //bind on constructor\r\n          //check state change in the react extension\r\n        }\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddQuiz.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddQuiz);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_BACKLOG:\r\n\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            };\r\n\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: action.payload\r\n            };\r\n\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false\r\n}\r\n\r\nconst booleanActionPayload = (payload) => {\r\n    if (payload) {\r\n        return true;\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                validToken: booleanActionPayload(action.payload),\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware) && ReactReduxDevTools)\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {deleteProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass ProjectTask extends Component {\r\n\r\n    onDeleteClick(backlog_id, pt_id) {\r\n        this.props.deleteProjectTask(backlog_id, pt_id);\r\n    }\r\n\r\n    render() {\r\n        const {project_task} = this.props;\r\n        let priorityString;\r\n        let priorityClass;\r\n\r\n        if (project_task.priority === 1) {\r\n            priorityClass = \"bg-danger text-light\"\r\n            priorityString = \"HIGH\"\r\n        }\r\n\r\n        if (project_task.priority === 2) {\r\n            priorityClass = \"bg-warning text-light\"\r\n            priorityString = \"MEDIUM\"\r\n        }\r\n\r\n        if (project_task.priority === 3) {\r\n            priorityClass = \"bg-info text-light\"\r\n            priorityString = \"LOW\"\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"card mb-1 bg-light\">\r\n                <div className={`card-header text-primary ${priorityClass}`}>\r\n                    ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                    <p className=\"card-text text-truncate \">\r\n                        {project_task.acceptanceCriteria}\r\n                    </p>\r\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n                          className=\"btn btn-primary\">\r\n                        View / Update\r\n                    </Link>\r\n\r\n                    <button className=\"btn btn-danger ml-4\"\r\n                            onClick={this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>Delete\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {deleteProjectTask})(ProjectTask);","import axios from \"axios\";\r\nimport {GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from './types';\r\n\r\nexport const addProjectTask = (\r\n    backlog_id,\r\n    project_task,\r\n    history\r\n) => async dispatch => {\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nexport const getProjectTask = (\r\n    backlog_id,\r\n    pt_id,\r\n    history\r\n) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        history.push(\"/dashboard\");\r\n    }\r\n};\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n    if (window.confirm(`You are deleting proje ct task ${pt_id}, this action can not be undone`)){\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        })\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n        const {project_tasks_prop} = this.props;\r\n\r\n        const tasks = project_tasks_prop.map(project_task => (\r\n            <ProjectTask key={project_task.id} project_task={project_task}/>\r\n        ));\r\n\r\n        let todoItems = [];\r\n        let inProgressItems = [];\r\n        let doneItems = [];\r\n\r\n        for (let i = 0; i < tasks.length; i++) {\r\n            if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n                todoItems.push(tasks[i])\r\n            } else if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n                inProgressItems.push(tasks[i])\r\n            }\r\n            if (tasks[i].props.project_task.status === \"DONE\") {\r\n                doneItems.push(tasks[i])\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                <h3>TO DO</h3>\r\n                            </div>\r\n                        </div>\r\n                        {todoItems}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                                <h3>In Progress</h3>\r\n                            </div>\r\n                        </div>\r\n                        {inProgressItems}\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-success text-white\">\r\n                                <h3>Done</h3>\r\n                            </div>\r\n                        </div>\r\n                        {doneItems}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Backlog;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\nimport { boardAlgorithm } from \"./boardAlgorithm\";\r\n\r\nclass ProjectBoard extends Component {\r\n    //constructor to handle errors\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getBacklog(id);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const { project_tasks } = this.props.backlog;\r\n        const { errors } = this.state;\r\n\r\n        let BoardContent;\r\n\r\n\r\n\r\n        BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                    <i className=\"fas fa-plus-circle\"> Create Question</i>\r\n                </Link>\r\n                <br />\r\n                <hr />\r\n                {BoardContent}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getBacklog }\r\n)(ProjectBoard);","import React from \"react\";\r\nimport Backlog from \"./Backlog\";\r\n\r\n\r\nconst boardAlgorithm = (errors, project_tasks) => {\r\n    if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n            return (\r\n                <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                    {errors.projectNotFound}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                    No Project Tasks on this board\r\n                </div>\r\n            );\r\n        }\r\n    } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n    }\r\n};\r\n\r\nexport {boardAlgorithm};\r\n\r\n","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {addProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {id} = this.props.match.params;\r\n\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier: id,\r\n            errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    // on change\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    //on submit\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const newTask = {\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate\r\n        };\r\n        this.props.addProjectTask(\r\n            this.state.projectIdentifier,\r\n            newTask,\r\n            this.props.history\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props.match.params;\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.summary\r\n                                        })}\r\n                                        name=\"summary\"\r\n                                        placeholder=\"Project Task summary\"\r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                  <textarea\r\n                      className=\"form-control form-control-lg\"\r\n                      placeholder=\"Acceptance Criteria\"\r\n                      name=\"acceptanceCriteria\"\r\n                      value={this.state.acceptanceCriteria}\r\n                      onChange={this.onChange}\r\n                  />\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary btn-block mt-4\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {addProjectTask}\r\n)(AddProjectTask);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: \"\",\r\n            projectIdentifier: \"\",\r\n            created_At: \"\"\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n\r\n        const {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            created_At\r\n        } = nextProps.project_task;\r\n\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            created_At\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { backlog_id, pt_id } = this.props.match.params;\r\n        console.log(this.props);\r\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const UpdateProjetTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            created_At: this.state.created_At\r\n        }\r\n\r\n        // console.log(UpdateProjetTask);\r\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, UpdateProjetTask, this.props.history);\r\n\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        console.log(errors);\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                            </Link>\r\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} +\r\n                                Project Task ID: {\" \"} | {this.state.projectSequence}{\" \"}</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors\r\n                                        })}\r\n                                        name=\"summary\"\r\n                                        placeholder=\"Project Task summary\"\r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {/*{*/}\r\n                                    {/*    errors && (*/}\r\n                                    {/*        <div className=\"invalid-feedback\">{errors}</div>*/}\r\n                                    {/*    )}*/}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary btn-block mt-4\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Landing extends Component {\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Quiz Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join Quizes or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, {Component} from 'react'\r\nimport {createNewUser} from '../../actions/securityActions';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n          username: \"\",\r\n          fullName: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n          errors: {}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n      if(nextProps.errors) {\r\n        this.setState({errors: nextProps.errors})\r\n      }\r\n    }\r\n\r\n    onSubmit(e) {\r\n      e.preventDefault();\r\n      const newUser = {\r\n        username: this.state.username,\r\n        fullName: this.state.fullName,\r\n        password: this.state.password,\r\n        confirmPassword: this.state.confirmPassword,\r\n      }\r\n\r\n      this.props.createNewUser(newUser, this.props.history)\r\n    }\r\n\r\n    onChange(e) {\r\n      this.setState({[e.target.name]: e.target.value});\r\n\r\n    }\r\n\r\n    render() {\r\n      const { errors } = this.state;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                          \"is-invalid\": errors.fullName\r\n                                        })}\r\n                                        placeholder=\"Full Name\"\r\n                                        name=\"fullName\"\r\n                                        value = {this.state.fullName}\r\n                                        onChange = {this.onChange}\r\n                                    />\r\n                                    {\r\n                                      errors.fullName && (\r\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                                      )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                          \"is-invalid\": errors.username\r\n                                        })}\r\n                                        placeholder=\"Email Address (Username)\"\r\n                                        name=\"username\"\r\n                                        value = {this.state.username}\r\n                                        onChange = {this.onChange}\r\n                                    />\r\n                                    {\r\n                                      errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                      )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className={classnames(\"form-control form-control-lg\",{\r\n                                          \"is-invalid\": errors.password\r\n                                        })}\r\n                                        placeholder=\"Password\"\r\n                                        name=\"password\"\r\n                                        value = {this.state.password}\r\n                                        onChange = {this.onChange}\r\n                                    />\r\n                                    {\r\n                                      errors.password && (\r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                      )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                          \"is-invalid\": errors.confirmPassword\r\n                                        })}\r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\"\r\n                                        value = {this.state.confirmPassword}\r\n                                        onChange = {this.onChange}\r\n                                    />\r\n                                      {\r\n                                      errors.confirmPassword && (\r\n                                        <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                      )\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProp = state => ({\r\n  errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProp, {createNewUser})(Register);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: \"\"\r\n    }\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    }\r\n    this.props.login(LoginRequest)\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\",\r\n                      { \"is-invalid\": errors.username })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\",\r\n                      { \"is-invalid\": errors.password })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" onSubmit={this.onSubmit} className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n    <Route {...otherProps} render={props => security.validToken === true ?\r\n        (<Component {...props} />) : (<Redirect to=\"/login\" />)} />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddQuiz from \"./components/Project/AddQuiz\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n    setJWTToken(jwtToken);\r\n    const decoded_jwtToken = jwt_decode(jwtToken);\r\n    store.dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded_jwtToken\r\n    });\r\n\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded_jwtToken.exp < currentTime) {\r\n        store.dispatch(logout());\r\n        window.location.href = \"/\";\r\n    }\r\n}\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <div className=\"App\">\r\n                        <Header />\r\n                        {\r\n                            //Public Routes\r\n                        }\r\n\r\n                        <Route exact path=\"/\" component={Landing} />\r\n                        <Route exact path=\"/register\" component={Register} />\r\n                        <Route exact path=\"/login\" component={Login} />\r\n\r\n                        {\r\n                            //Private Routes\r\n                        }\r\n                        <Switch>\r\n                            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                            <SecuredRoute exact path=\"/addQuiz\" component={AddQuiz} />\r\n                            <SecuredRoute\r\n                                exact\r\n                                path=\"/updateProject/:id\"\r\n                                component={UpdateProject}\r\n                            />\r\n                            <SecuredRoute\r\n                                exact\r\n                                path=\"/projectBoard/:id\"\r\n                                component={ProjectBoard}\r\n                            />\r\n                            <SecuredRoute\r\n                                exact\r\n                                path=\"/addProjectTask/:id\"\r\n                                component={AddProjectTask}\r\n                            />\r\n                            <SecuredRoute\r\n                                exact\r\n                                path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n                                component={UpdateProjectTask}\r\n                            />\r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
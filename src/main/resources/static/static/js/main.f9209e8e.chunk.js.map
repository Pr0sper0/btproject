{"version":3,"sources":["logo.svg","actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","console","log","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","sent","_x2","Header","headerLinks","userIsAuthenticated","data-toggle","data-target","AddProject","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","inherits","createClass","value","nextProps","setState","e","_e$target","target","name","defineProperty","preventDefault","newProject","classnames","is-invalid","placeholder","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","get","_x3","initialState","combineReducers","length","undefined","action","objectSpread","filter","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","App","es","Layout_Header","react_router","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9209e8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    //const res =\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios(\"/api/project/all\");\r\n  //history.push(\"/dashboard\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure want to delete project? This will delete all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <Link>\r\n                  <li\r\n                    className=\"list-group-item delete\"\r\n                    onClick={this.onDeleteClick.bind(\r\n                      this,\r\n                      project.projectIdentifier\r\n                    )}\r\n                  >\r\n                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                  </li>\r\n                </Link>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n              {/*\r\n                  <!-- Comments -->\r\n              */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\"></Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (true) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nexport class AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    let { name, value } = e.target;\r\n    this.setState(() => ({ [name]: value }));\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n    console.log(newProject);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        {\r\n          //check name attribute input fields\r\n          //create constructor\r\n          //set state\r\n          //set value on input fields\r\n          //create onChange function\r\n          //set onChange on each input field\r\n          //bind on constructor\r\n          //check state change in the react extension\r\n        }\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n    console.log(updateProject);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/addProject\" component={AddProject} />\n            <Route path=\"/updateProject/:id\" component={UpdateProject} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["logo.svg","actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/Layout/Header.js","components/Project/AddProject.js","components/Project/UpdateProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","console","log","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","Accordion","defaultActiveKey","Card","Header","Toggle","as","Button","variant","eventKey","projectName","Collapse","Body","description","react_router_dom","to","concat","projectIdentifier","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","sent","_x2","headerLinks","userIsAuthenticated","data-toggle","data-target","AddProject","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","inherits","createClass","value","nextProps","setState","e","_e$target","target","name","defineProperty","preventDefault","newProject","classnames","is-invalid","placeholder","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","get","_x3","initialState","combineReducers","length","undefined","action","objectSpread","filter","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","App","es","Layout_Header","react_router","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.773b06d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    //const res =\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios(\"/api/project/all\");\r\n  //history.push(\"/dashboard\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure want to delete project? This will delete all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\nimport { Button, Accordion, Card } from \"react-bootstrap\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <Accordion defaultActiveKey=\"0\">\r\n          <Card>\r\n            <Card.Header>\r\n              <Accordion.Toggle\r\n                as={Button}\r\n                variant=\"link\"\r\n                eventKey=\"{project.projectIdentifier}\"\r\n              >\r\n                {project.projectName}\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey=\"{project.projectIdentifier}\">\r\n              <Card.Body>\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-9 col-md-4 col-10\">\r\n                    <p>{project.description}</p>\r\n                  </div>\r\n                  <div className=\"col-md-3 d-none d-lg-block\">\r\n                    <ul className=\"list-group\">\r\n                      <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                        <li className=\"list-group-item update\">\r\n                          <i className=\"fa fa-edit pr-1\"> Update Answer Info</i>\r\n                        </li>\r\n                      </Link>\r\n                      <Link>\r\n                        <li\r\n                          className=\"list-group-item delete\"\r\n                          onClick={this.onDeleteClick.bind(\r\n                            this,\r\n                            project.projectIdentifier\r\n                          )}\r\n                        >\r\n                          <i className=\"fa fa-minus-circle pr-1\">\r\n                            {\" \"}\r\n                            Delete Project\r\n                          </i>\r\n                        </li>\r\n                      </Link>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </Card.Body>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        </Accordion>\r\n\r\n        <div className=\"card card-footer bg-light mb-3\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Question\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">FullStack Quiz</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n              {/*\r\n                  <!-- Comments -->\r\n              */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\"></Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (true) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Quiz Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nexport class AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    let { name, value } = e.target;\r\n    this.setState(() => ({ [name]: value }));\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n    console.log(newProject);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        {\r\n          //check name attribute input fields\r\n          //create constructor\r\n          //set state\r\n          //set value on input fields\r\n          //create onChange function\r\n          //set onChange on each input field\r\n          //bind on constructor\r\n          //check state change in the react extension\r\n        }\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project;\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n    console.log(updateProject);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport AddProject from \"./components/Project/AddProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/addProject\" component={AddProject} />\n            <Route path=\"/updateProject/:id\" component={UpdateProject} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}